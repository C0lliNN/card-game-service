// Code generated by mockery v2.20.0. DO NOT EDIT.

package game

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// DeckRepository is an autogenerated mock type for the DeckRepository type
type DeckRepositoryMock struct {
	mock.Mock
}

// FindByID provides a mock function with given fields: ctx, id
func (_m *DeckRepositoryMock) FindByID(ctx context.Context, id string) (Deck, error) {
	ret := _m.Called(ctx, id)

	var r0 Deck
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (Deck, error)); ok {
		return rf(ctx, id)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) Deck); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(Deck)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, deck
func (_m *DeckRepositoryMock) Save(ctx context.Context, deck Deck) error {
	ret := _m.Called(ctx, deck)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, Deck) error); ok {
		r0 = rf(ctx, deck)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDeckRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeckRepository creates a new instance of DeckRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeckRepository(t mockConstructorTestingTNewDeckRepository) *DeckRepositoryMock {
	mock := &DeckRepositoryMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
